"""
Given a list of integers representing squares of chocolate, a birth day `d`, and a birth month `m`, 
determine how many contiguous subarrays of length `m` sum up to `d`.

"""

#!/bin/python3

import math
import os
import random
import re
import sys

def birthday(s, d, m):
    count = 0  # To store the number of valid subarrays
    
    # Loop over the array and check all subarrays of length m
    for i in range(len(s) - m + 1):
        # Slice subarray from i to i + m and check if sum equals d
        if sum(s[i:i+m]) == d:
            count += 1
    
    return count

# Entry point for HackerRank execution
if __name__ == '__main__':
    # Create a file pointer to write the output
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    # Read number of elements in the list
    n = int(input().strip())

    # Read the list of integers
    s = list(map(int, input().rstrip().split()))

    # Read day (d) and month (m)
    first_multiple_input = input().rstrip().split()
    d = int(first_multiple_input[0])
    m = int(first_multiple_input[1])

    # Call the function and get the result
    result = birthday(s, d, m)

    # Write result to output
    fptr.write(str(result) + '\n')
    fptr.close()
